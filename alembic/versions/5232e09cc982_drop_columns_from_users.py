"""drop columns from users

Revision ID: 5232e09cc982
Revises: 9ea677aeca75
Create Date: 2024-10-07 13:00:38.093283

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5232e09cc982'
down_revision: Union[str, None] = '9ea677aeca75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('chat_messages', 'timestamp',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('hotspots', 'new_field_example')
    op.add_column('users', sa.Column('smoking', sa.Enum('occasionally', 'never', 'socially', name='smokinghabit'), nullable=True))
    op.add_column('users', sa.Column('drinking', sa.Enum('occasionally', 'never', 'socially', name='drinkinghabit'), nullable=True))
    op.add_column('users', sa.Column('workout', sa.Enum('daily', 'never', 'sometimes', name='workouthabit'), nullable=True))
    op.alter_column('users', 'education_level',
               existing_type=sa.VARCHAR(),
               type_=sa.Enum('school', 'college', name='educationlevel'),
               existing_nullable=True)
    op.alter_column('users', 'height_cm',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_index('ix_users_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.drop_column('users', 'workout_habits')
    op.drop_column('users', 'interests')
    op.drop_column('users', 'smoking_habits')
    op.drop_column('users', 'residence_location')
    op.drop_column('users', 'drinking_habits')
    # ### end Alembic commands ###


def upgrade():
    # Drop the specified columns from the users table
    op.drop_column('users', 'education_level')
    op.drop_column('users', 'interests')
    op.drop_column('users', 'workout_habits')
    op.drop_column('users', 'drinking_habits')
    op.drop_column('users', 'smoking_habits')

def downgrade():
    # Add the columns back in case of rollback
    pass
